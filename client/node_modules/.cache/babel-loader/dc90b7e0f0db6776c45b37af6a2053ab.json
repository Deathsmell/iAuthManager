{"ast":null,"code":"import _slicedToArray from\"/home/deathsmell/WebstormProjects/iAuthManager/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useCallback}from\"react\";import moment from\"moment\";var UserCell=function UserCell(_ref){var user=_ref.user;var fixDate=useCallback(function(date){return moment(date).format(\"hh:mm:ss MM-DD-YY\");},[]);var fieldValueHandler=useCallback(function(fieldName,value){if(fieldName===\"createdAt\"){return fixDate(value);}if(fieldName==='status'){return/*#__PURE__*/React.createElement(\"div\",{style:{fontSize:\"20px\"},className:\"chip \".concat(value===\"blocked\"?\"red\":\"green\")},value);}else{return value;}},[user,fixDate]);return Object.entries(user).map(function(_ref2,index){var _ref3=_slicedToArray(_ref2,2),fieldName=_ref3[0],value=_ref3[1];return/*#__PURE__*/React.createElement(\"td\",{className:value,key:\"\".concat(value,\"-\").concat(index,\"-\").concat(value)},fieldValueHandler(fieldName,value));});};export default UserCell;","map":{"version":3,"sources":["/home/deathsmell/WebstormProjects/iAuthManager/client/src/components/UserTable/UserCell.js"],"names":["React","useCallback","moment","UserCell","user","fixDate","date","format","fieldValueHandler","fieldName","value","fontSize","concat","Object","entries","map","index"],"mappings":"wIAAA,MAAOA,CAAAA,KAAP,EAAeC,WAAf,KAAiC,OAAjC,CACA,MAAOC,CAAAA,MAAP,KAAmB,QAAnB,CAGA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAY,IAAVC,CAAAA,IAAU,MAAVA,IAAU,CACzB,GAAMC,CAAAA,OAAO,CAAGJ,WAAW,CAAC,SAACK,IAAD,QAAUJ,CAAAA,MAAM,CAACI,IAAD,CAAN,CAAaC,MAAb,CAAoB,mBAApB,CAAV,EAAD,CAAqD,EAArD,CAA3B,CAEA,GAAMC,CAAAA,iBAAiB,CAAGP,WAAW,CAAC,SAACQ,SAAD,CAAYC,KAAZ,CAAsB,CACxD,GAAID,SAAS,GAAK,WAAlB,CAA+B,CAC3B,MAAOJ,CAAAA,OAAO,CAACK,KAAD,CAAd,CACH,CACD,GAAID,SAAS,GAAK,QAAlB,CAA4B,CACxB,mBACI,2BAAK,KAAK,CAAE,CAACE,QAAQ,CAAE,MAAX,CAAZ,CAAgC,SAAS,CAAE,QAAQC,MAAR,CAAeF,KAAK,GAAK,SAAV,CAAsB,KAAtB,CAA8B,OAA7C,CAA3C,EACKA,KADL,CADJ,CAKH,CAND,IAMO,CACH,MAAOA,CAAAA,KAAP,CACH,CACJ,CAboC,CAalC,CAACN,IAAD,CAAMC,OAAN,CAbkC,CAArC,CAeA,MACIQ,CAAAA,MAAM,CAACC,OAAP,CAAeV,IAAf,EAAqBW,GAArB,CAAyB,eAAqBC,KAArB,CAA+B,mCAA7BP,SAA6B,UAAlBC,KAAkB,UACpD,mBACI,0BACI,SAAS,CAAEA,KADf,CAEI,GAAG,WAAKA,KAAL,aAAcM,KAAd,aAAuBN,KAAvB,CAFP,EAKQF,iBAAiB,CAACC,SAAD,CAAYC,KAAZ,CALzB,CADJ,CAUH,CAXD,CADJ,CAcH,CAhCD,CAkCA,cAAeP,CAAAA,QAAf","sourcesContent":["import React, {useCallback} from \"react\";\nimport moment from \"moment\";\n\n\nconst UserCell = ({user}) => {\n    const fixDate = useCallback((date) => moment(date).format(\"hh:mm:ss MM-DD-YY\"), [])\n\n    const fieldValueHandler = useCallback((fieldName, value) => {\n        if (fieldName === \"createdAt\") {\n            return fixDate(value)\n        }\n        if (fieldName === 'status') {\n            return (\n                <div style={{fontSize: \"20px\"}} className={\"chip \".concat(value === \"blocked\" ? \"red\" : \"green\")}>\n                    {value}\n                </div>\n            )\n        } else {\n            return value\n        }\n    }, [user,fixDate])\n\n    return (\n        Object.entries(user).map(([fieldName, value], index) => {\n            return (\n                <td\n                    className={value}\n                    key={`${value}-${index}-${value}`}\n                >\n                    {\n                        fieldValueHandler(fieldName, value)\n                    }\n                </td>\n            )\n        })\n    )\n}\n\nexport default UserCell"]},"metadata":{},"sourceType":"module"}