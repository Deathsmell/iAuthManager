{"ast":null,"code":"var _jsxFileName = \"/home/deathsmell/WebstormProjects/iAuthManager/client/src/components/UserTable/UserCell.js\";\nimport React, { useCallback } from \"react\";\nimport moment from \"moment\";\n\nconst UserCell = ({\n  user\n}) => {\n  const fixDate = useCallback(date => moment(date).format(\"hh:mm:ss MM-DD-YY\"), []);\n  const fieldValueHandler = useCallback((fieldName, value) => {\n    if (fieldName === \"createdAt\") {\n      return fixDate(value);\n    }\n\n    if (fieldName === 'status') {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          fontSize: \"20px\"\n        },\n        className: \"chip \".concat(value === \"blocked\" ? \"red\" : \"green\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 17\n        }\n      }, value);\n    } else {\n      return value;\n    }\n  }, [user, fixDate]);\n  return Object.entries(user).map(([fieldName, value], index) => {\n    return /*#__PURE__*/React.createElement(\"td\", {\n      className: value,\n      key: `${value}-${index}-${value}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }, fieldValueHandler(fieldName, value));\n  });\n};\n\nexport default UserCell;","map":{"version":3,"sources":["/home/deathsmell/WebstormProjects/iAuthManager/client/src/components/UserTable/UserCell.js"],"names":["React","useCallback","moment","UserCell","user","fixDate","date","format","fieldValueHandler","fieldName","value","fontSize","concat","Object","entries","map","index"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,WAAf,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAGA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AACzB,QAAMC,OAAO,GAAGJ,WAAW,CAAEK,IAAD,IAAUJ,MAAM,CAACI,IAAD,CAAN,CAAaC,MAAb,CAAoB,mBAApB,CAAX,EAAqD,EAArD,CAA3B;AAEA,QAAMC,iBAAiB,GAAGP,WAAW,CAAC,CAACQ,SAAD,EAAYC,KAAZ,KAAsB;AACxD,QAAID,SAAS,KAAK,WAAlB,EAA+B;AAC3B,aAAOJ,OAAO,CAACK,KAAD,CAAd;AACH;;AACD,QAAID,SAAS,KAAK,QAAlB,EAA4B;AACxB,0BACI;AAAK,QAAA,KAAK,EAAE;AAACE,UAAAA,QAAQ,EAAE;AAAX,SAAZ;AAAgC,QAAA,SAAS,EAAE,QAAQC,MAAR,CAAeF,KAAK,KAAK,SAAV,GAAsB,KAAtB,GAA8B,OAA7C,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKA,KADL,CADJ;AAKH,KAND,MAMO;AACH,aAAOA,KAAP;AACH;AACJ,GAboC,EAalC,CAACN,IAAD,EAAMC,OAAN,CAbkC,CAArC;AAeA,SACIQ,MAAM,CAACC,OAAP,CAAeV,IAAf,EAAqBW,GAArB,CAAyB,CAAC,CAACN,SAAD,EAAYC,KAAZ,CAAD,EAAqBM,KAArB,KAA+B;AACpD,wBACI;AACI,MAAA,SAAS,EAAEN,KADf;AAEI,MAAA,GAAG,EAAG,GAAEA,KAAM,IAAGM,KAAM,IAAGN,KAAM,EAFpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKQF,iBAAiB,CAACC,SAAD,EAAYC,KAAZ,CALzB,CADJ;AAUH,GAXD,CADJ;AAcH,CAhCD;;AAkCA,eAAeP,QAAf","sourcesContent":["import React, {useCallback} from \"react\";\nimport moment from \"moment\";\n\n\nconst UserCell = ({user}) => {\n    const fixDate = useCallback((date) => moment(date).format(\"hh:mm:ss MM-DD-YY\"), [])\n\n    const fieldValueHandler = useCallback((fieldName, value) => {\n        if (fieldName === \"createdAt\") {\n            return fixDate(value)\n        }\n        if (fieldName === 'status') {\n            return (\n                <div style={{fontSize: \"20px\"}} className={\"chip \".concat(value === \"blocked\" ? \"red\" : \"green\")}>\n                    {value}\n                </div>\n            )\n        } else {\n            return value\n        }\n    }, [user,fixDate])\n\n    return (\n        Object.entries(user).map(([fieldName, value], index) => {\n            return (\n                <td\n                    className={value}\n                    key={`${value}-${index}-${value}`}\n                >\n                    {\n                        fieldValueHandler(fieldName, value)\n                    }\n                </td>\n            )\n        })\n    )\n}\n\nexport default UserCell"]},"metadata":{},"sourceType":"module"}