{"ast":null,"code":"import _regeneratorRuntime from\"/home/deathsmell/WebstormProjects/iAuthManager/client/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/deathsmell/WebstormProjects/iAuthManager/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/deathsmell/WebstormProjects/iAuthManager/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useCallback,useState}from'react';export var useHttp=function useHttp(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];var request=useCallback(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(url){var method,body,headers,response,data,_error,_args=arguments;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:method=_args.length>1&&_args[1]!==undefined?_args[1]:'GET';body=_args.length>2&&_args[2]!==undefined?_args[2]:null;headers=_args.length>3&&_args[3]!==undefined?_args[3]:{};setLoading(true);_context.prev=4;if(body){body=JSON.stringify(body);headers['Content-Type']='application/json';}_context.next=8;return fetch(url,{method:method,body:body,headers:headers});case 8:response=_context.sent;_context.prev=9;_context.next=12;return response.json();case 12:data=_context.sent;_context.next=19;break;case 15:_context.prev=15;_context.t0=_context[\"catch\"](9);_error=data.message?data.message:\"Unsupported json\";setError(_error);case 19:if(!response.ok){setError(data.message||{message:\"useHttp response error\"});}setLoading(false);return _context.abrupt(\"return\",data);case 24:_context.prev=24;_context.t1=_context[\"catch\"](4);setLoading(false);throw _context.t1;case 28:case\"end\":return _context.stop();}}},_callee,null,[[4,24],[9,15]]);}));return function(_x){return _ref.apply(this,arguments);};}(),[]);var clearError=useCallback(function(){return setError(null);},[]);return{loading:loading,error:error,request:request,clearError:clearError};};","map":{"version":3,"sources":["/home/deathsmell/WebstormProjects/iAuthManager/client/src/hooks/http.hook.js"],"names":["useCallback","useState","useHttp","loading","setLoading","error","setError","request","url","method","body","headers","JSON","stringify","fetch","response","json","data","message","ok","clearError"],"mappings":"qZAAA,OAAQA,WAAR,CAAqBC,QAArB,KAAoC,OAApC,CAEA,MAAO,IAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,eACKD,QAAQ,CAAC,KAAD,CADb,wCAClBE,OADkB,eACTC,UADS,8BAECH,QAAQ,CAAC,IAAD,CAFT,yCAElBI,KAFkB,eAEXC,QAFW,eAIzB,GAAMC,CAAAA,OAAO,CAAGP,WAAW,0FAAC,iBAAOQ,GAAP,+KAAYC,MAAZ,+CAAqB,KAArB,CAA4BC,IAA5B,+CAAmC,IAAnC,CAAyCC,OAAzC,+CAAmD,EAAnD,CACxBP,UAAU,CAAC,IAAD,CAAV,CADwB,gBAGpB,GAAIM,IAAJ,CAAU,CACNA,IAAI,CAAGE,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAP,CACAC,OAAO,CAAC,cAAD,CAAP,CAA0B,kBAA1B,CACH,CANmB,sBAQGG,CAAAA,KAAK,CAACN,GAAD,CAAM,CAC9BC,MAAM,CAANA,MAD8B,CAE9BC,IAAI,CAAJA,IAF8B,CAG9BC,OAAO,CAAPA,OAH8B,CAAN,CARR,QAQdI,QARc,sDAgBHA,CAAAA,QAAQ,CAACC,IAAT,EAhBG,SAgBhBC,IAhBgB,gGAkBVZ,MAlBU,CAkBFY,IAAI,CAACC,OAAL,CAAeD,IAAI,CAACC,OAApB,CAA8B,kBAlB5B,CAmBhBZ,QAAQ,CAACD,MAAD,CAAR,CAnBgB,QAsBpB,GAAI,CAACU,QAAQ,CAACI,EAAd,CAAkB,CACdb,QAAQ,CAACW,IAAI,CAACC,OAAL,EAAgB,CAACA,OAAO,CAAE,wBAAV,CAAjB,CAAR,CACH,CACDd,UAAU,CAAC,KAAD,CAAV,CAzBoB,gCA0Bba,IA1Ba,4DA4BpBb,UAAU,CAAC,KAAD,CAAV,CA5BoB,8FAAD,+DA+BxB,EA/BwB,CAA3B,CAiCA,GAAMgB,CAAAA,UAAU,CAAGpB,WAAW,CAAC,iBAAMM,CAAAA,QAAQ,CAAC,IAAD,CAAd,EAAD,CAAuB,EAAvB,CAA9B,CAEA,MAAO,CAACH,OAAO,CAAPA,OAAD,CAAUE,KAAK,CAALA,KAAV,CAAiBE,OAAO,CAAPA,OAAjB,CAA0Ba,UAAU,CAAVA,UAA1B,CAAP,CACH,CAxCM","sourcesContent":["import {useCallback, useState} from 'react'\n\nexport const useHttp = () => {\n    const [loading, setLoading] = useState(false)\n    const [error, setError] = useState(null)\n\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\n        setLoading(true)\n        try {\n            if (body) {\n                body = JSON.stringify(body)\n                headers['Content-Type'] = 'application/json'\n            }\n\n            const response = await fetch(url, {\n                method,\n                body,\n                headers\n            })\n\n            let data\n            try {\n                data = await response.json()\n            } catch (e) {\n                const error = data.message ? data.message : \"Unsupported json\"\n                setError(error)\n            }\n\n            if (!response.ok) {\n                setError(data.message || {message: \"useHttp response error\"})\n            }\n            setLoading(false)\n            return data\n        } catch (e) {\n            setLoading(false)\n            throw e\n        }\n    }, [])\n\n    const clearError = useCallback(() => setError(null), [])\n\n    return {loading, error, request, clearError}\n}"]},"metadata":{},"sourceType":"module"}