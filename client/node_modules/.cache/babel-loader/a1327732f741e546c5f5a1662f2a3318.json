{"ast":null,"code":"import { useState, useCallback, useEffect } from 'react';\nimport { useHttp } from \"./http.hook\";\nexport const useAuth = () => {\n  const {\n    request\n  } = useHttp();\n  const [token, setToken] = useState(null);\n  const [userId, setUserId] = useState(null);\n  const [isAuthenticated, setAuthenticate] = useState(false);\n  useEffect(() => {\n    if (!isAuthenticated && token) {\n      request('api/auth', 'POST', null, {\n        Authorization: `Bearer ${token}`\n      }).then(resp => {\n        if (!!resp.isAuthenticated) {\n          setAuthenticate(true);\n        } else {\n          localStorage.removeItem(\"token\");\n        }\n      }).catch(console.error);\n    }\n  }, [isAuthenticated, token, request]);\n  const login = useCallback((jwtToken, id) => {\n    setToken(jwtToken);\n    setUserId(id);\n    localStorage.setItem(\"userId\", id);\n    localStorage.setItem(\"token\", jwtToken);\n  }, []);\n  const logout = useCallback(() => {\n    setToken(null);\n    setUserId(null);\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"userId\");\n  }, []);\n  useEffect(() => {\n    const storageToken = localStorage.getItem(\"token\") || null;\n    const storageUserId = localStorage.getItem(\"userId\") || null;\n\n    if (!token && !userId) {\n      login(storageToken, storageUserId);\n    }\n  }, [login, token, userId]);\n  return {\n    token,\n    userId,\n    login,\n    logout,\n    isAuthenticated\n  };\n};","map":{"version":3,"sources":["/home/deathsmell/WebstormProjects/iAuthManager/client/src/hooks/auth.hook.js"],"names":["useState","useCallback","useEffect","useHttp","useAuth","request","token","setToken","userId","setUserId","isAuthenticated","setAuthenticate","Authorization","then","resp","localStorage","removeItem","catch","console","error","login","jwtToken","id","setItem","logout","storageToken","getItem","storageUserId"],"mappings":"AAAA,SAAQA,QAAR,EAAkBC,WAAlB,EAA+BC,SAA/B,QAAgD,OAAhD;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAGA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAEzB,QAAM;AAACC,IAAAA;AAAD,MAAYF,OAAO,EAAzB;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACU,eAAD,EAAkBC,eAAlB,IAAqCX,QAAQ,CAAC,KAAD,CAAnD;AAEAE,EAAAA,SAAS,CAAC,MAAI;AACV,QAAI,CAACQ,eAAD,IAAoBJ,KAAxB,EAA8B;AAC1BD,MAAAA,OAAO,CAAC,UAAD,EAAY,MAAZ,EAAmB,IAAnB,EAAwB;AAACO,QAAAA,aAAa,EAAG,UAASN,KAAM;AAAhC,OAAxB,CAAP,CACKO,IADL,CACUC,IAAI,IAAI;AACV,YAAI,CAAC,CAACA,IAAI,CAACJ,eAAX,EAA2B;AACvBC,UAAAA,eAAe,CAAC,IAAD,CAAf;AACH,SAFD,MAEO;AACHI,UAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACH;AACJ,OAPL,EAQKC,KARL,CAQWC,OAAO,CAACC,KARnB;AASH;AACJ,GAZQ,EAYP,CAACT,eAAD,EAAiBJ,KAAjB,EAAuBD,OAAvB,CAZO,CAAT;AAcA,QAAMe,KAAK,GAAGnB,WAAW,CAAC,CAACoB,QAAD,EAAWC,EAAX,KAAkB;AACxCf,IAAAA,QAAQ,CAACc,QAAD,CAAR;AACAZ,IAAAA,SAAS,CAACa,EAAD,CAAT;AACAP,IAAAA,YAAY,CAACQ,OAAb,CAAqB,QAArB,EAA+BD,EAA/B;AACAP,IAAAA,YAAY,CAACQ,OAAb,CAAqB,OAArB,EAA8BF,QAA9B;AACH,GALwB,EAKtB,EALsB,CAAzB;AAOA,QAAMG,MAAM,GAAGvB,WAAW,CAAC,MAAM;AAC7BM,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAE,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAM,IAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACAD,IAAAA,YAAY,CAACC,UAAb,CAAwB,QAAxB;AACH,GALyB,EAKvB,EALuB,CAA1B;AASAd,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMuB,YAAY,GAAGV,YAAY,CAACW,OAAb,CAAqB,OAArB,KAAiC,IAAtD;AACA,UAAMC,aAAa,GAAGZ,YAAY,CAACW,OAAb,CAAqB,QAArB,KAAkC,IAAxD;;AACA,QAAI,CAACpB,KAAD,IAAU,CAACE,MAAf,EAAsB;AAClBY,MAAAA,KAAK,CAACK,YAAD,EAAeE,aAAf,CAAL;AACH;AACJ,GANQ,EAMP,CAACP,KAAD,EAAOd,KAAP,EAAaE,MAAb,CANO,CAAT;AAQA,SAAO;AAACF,IAAAA,KAAD;AAAQE,IAAAA,MAAR;AAAgBY,IAAAA,KAAhB;AAAuBI,IAAAA,MAAvB;AAA8Bd,IAAAA;AAA9B,GAAP;AAEH,CA/CM","sourcesContent":["import {useState, useCallback, useEffect,} from 'react'\nimport {useHttp} from \"./http.hook\";\n\n\nexport const useAuth = () => {\n\n    const {request} = useHttp()\n    const [token, setToken] = useState(null)\n    const [userId, setUserId] = useState(null)\n    const [isAuthenticated, setAuthenticate] = useState(false)\n\n    useEffect(()=>{\n        if (!isAuthenticated && token){\n            request('api/auth','POST',null,{Authorization: `Bearer ${token}`})\n                .then(resp => {\n                    if (!!resp.isAuthenticated){\n                        setAuthenticate(true)\n                    } else {\n                        localStorage.removeItem(\"token\")\n                    }\n                })\n                .catch(console.error)\n        }\n    },[isAuthenticated,token,request])\n\n    const login = useCallback((jwtToken, id) => {\n        setToken(jwtToken)\n        setUserId(id)\n        localStorage.setItem(\"userId\", id)\n        localStorage.setItem(\"token\", jwtToken)\n    }, [])\n\n    const logout = useCallback(() => {\n        setToken(null)\n        setUserId(null)\n        localStorage.removeItem(\"token\")\n        localStorage.removeItem(\"userId\")\n    }, [])\n\n\n\n    useEffect(() => {\n        const storageToken = localStorage.getItem(\"token\") || null\n        const storageUserId = localStorage.getItem(\"userId\") || null\n        if (!token && !userId){\n            login(storageToken, storageUserId)\n        }\n    },[login,token,userId])\n\n    return {token, userId, login, logout,isAuthenticated}\n\n}"]},"metadata":{},"sourceType":"module"}