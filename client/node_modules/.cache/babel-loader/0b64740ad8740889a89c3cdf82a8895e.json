{"ast":null,"code":"import _slicedToArray from\"/home/deathsmell/WebstormProjects/iAuthManager/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useCallback,useEffect}from'react';import{useHttp}from\"./http.hook\";export var useAuth=function useAuth(){var _useHttp=useHttp(),request=_useHttp.request;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),token=_useState2[0],setToken=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),userId=_useState4[0],setUserId=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isAuthenticated=_useState6[0],setAuthenticate=_useState6[1];useEffect(function(){if(!isAuthenticated&&token){request('api/auth','POST',null,{Authorization:\"Bearer \".concat(token)}).then(function(resp){if(!!resp.isAuthenticated){setAuthenticate(true);}else{localStorage.removeItem(\"token\");}}).catch(console.error);}},[isAuthenticated,token,request]);var login=useCallback(function(jwtToken,id){setToken(jwtToken);setUserId(id);localStorage.setItem(\"userId\",id);localStorage.setItem(\"token\",jwtToken);},[]);var logout=useCallback(function(){console.log(\"I remove TOKEN\");setToken(null);setUserId(null);localStorage.removeItem(\"token\");localStorage.removeItem(\"userId\");},[]);useEffect(function(){var storageToken=localStorage.getItem(\"token\");var storageUserId=localStorage.getItem(\"userId\");if(!token){login(storageToken,storageUserId);}},[login,token,userId]);return{token:token,userId:userId,login:login,logout:logout,isAuthenticated:isAuthenticated};};","map":{"version":3,"sources":["/home/deathsmell/WebstormProjects/iAuthManager/client/src/hooks/auth.hook.js"],"names":["useState","useCallback","useEffect","useHttp","useAuth","request","token","setToken","userId","setUserId","isAuthenticated","setAuthenticate","Authorization","then","resp","localStorage","removeItem","catch","console","error","login","jwtToken","id","setItem","logout","log","storageToken","getItem","storageUserId"],"mappings":"wIAAA,OAAQA,QAAR,CAAkBC,WAAlB,CAA+BC,SAA/B,KAAgD,OAAhD,CACA,OAAQC,OAAR,KAAsB,aAAtB,CAGA,MAAO,IAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,cAEPD,OAAO,EAFA,CAElBE,OAFkB,UAElBA,OAFkB,eAGCL,QAAQ,CAAC,IAAD,CAHT,wCAGlBM,KAHkB,eAGXC,QAHW,8BAIGP,QAAQ,CAAC,IAAD,CAJX,yCAIlBQ,MAJkB,eAIVC,SAJU,8BAKkBT,QAAQ,CAAC,KAAD,CAL1B,yCAKlBU,eALkB,eAKDC,eALC,eAOzBT,SAAS,CAAC,UAAI,CACV,GAAI,CAACQ,eAAD,EAAoBJ,KAAxB,CAA8B,CAC1BD,OAAO,CAAC,UAAD,CAAY,MAAZ,CAAmB,IAAnB,CAAwB,CAACO,aAAa,kBAAYN,KAAZ,CAAd,CAAxB,CAAP,CACKO,IADL,CACU,SAAAC,IAAI,CAAI,CACV,GAAI,CAAC,CAACA,IAAI,CAACJ,eAAX,CAA2B,CACvBC,eAAe,CAAC,IAAD,CAAf,CACH,CAFD,IAEO,CACHI,YAAY,CAACC,UAAb,CAAwB,OAAxB,EACH,CACJ,CAPL,EAQKC,KARL,CAQWC,OAAO,CAACC,KARnB,EASH,CACJ,CAZQ,CAYP,CAACT,eAAD,CAAiBJ,KAAjB,CAAuBD,OAAvB,CAZO,CAAT,CAcA,GAAMe,CAAAA,KAAK,CAAGnB,WAAW,CAAC,SAACoB,QAAD,CAAWC,EAAX,CAAkB,CACxCf,QAAQ,CAACc,QAAD,CAAR,CACAZ,SAAS,CAACa,EAAD,CAAT,CACAP,YAAY,CAACQ,OAAb,CAAqB,QAArB,CAA+BD,EAA/B,EACAP,YAAY,CAACQ,OAAb,CAAqB,OAArB,CAA8BF,QAA9B,EACH,CALwB,CAKtB,EALsB,CAAzB,CAOA,GAAMG,CAAAA,MAAM,CAAGvB,WAAW,CAAC,UAAM,CAC7BiB,OAAO,CAACO,GAAR,CAAY,gBAAZ,EACAlB,QAAQ,CAAC,IAAD,CAAR,CACAE,SAAS,CAAC,IAAD,CAAT,CACAM,YAAY,CAACC,UAAb,CAAwB,OAAxB,EACAD,YAAY,CAACC,UAAb,CAAwB,QAAxB,EACH,CANyB,CAMvB,EANuB,CAA1B,CAUAd,SAAS,CAAC,UAAM,CACZ,GAAMwB,CAAAA,YAAY,CAAGX,YAAY,CAACY,OAAb,CAAqB,OAArB,CAArB,CACA,GAAMC,CAAAA,aAAa,CAAGb,YAAY,CAACY,OAAb,CAAqB,QAArB,CAAtB,CACA,GAAI,CAACrB,KAAL,CAAW,CACPc,KAAK,CAACM,YAAD,CAAeE,aAAf,CAAL,CACH,CACJ,CANQ,CAMP,CAACR,KAAD,CAAOd,KAAP,CAAaE,MAAb,CANO,CAAT,CAQA,MAAO,CAACF,KAAK,CAALA,KAAD,CAAQE,MAAM,CAANA,MAAR,CAAgBY,KAAK,CAALA,KAAhB,CAAuBI,MAAM,CAANA,MAAvB,CAA8Bd,eAAe,CAAfA,eAA9B,CAAP,CAEH,CAhDM","sourcesContent":["import {useState, useCallback, useEffect,} from 'react'\nimport {useHttp} from \"./http.hook\";\n\n\nexport const useAuth = () => {\n\n    const {request} = useHttp()\n    const [token, setToken] = useState(null)\n    const [userId, setUserId] = useState(null)\n    const [isAuthenticated, setAuthenticate] = useState(false)\n\n    useEffect(()=>{\n        if (!isAuthenticated && token){\n            request('api/auth','POST',null,{Authorization: `Bearer ${token}`})\n                .then(resp => {\n                    if (!!resp.isAuthenticated){\n                        setAuthenticate(true)\n                    } else {\n                        localStorage.removeItem(\"token\")\n                    }\n                })\n                .catch(console.error)\n        }\n    },[isAuthenticated,token,request])\n\n    const login = useCallback((jwtToken, id) => {\n        setToken(jwtToken)\n        setUserId(id)\n        localStorage.setItem(\"userId\", id)\n        localStorage.setItem(\"token\", jwtToken)\n    }, [])\n\n    const logout = useCallback(() => {\n        console.log(\"I remove TOKEN\")\n        setToken(null)\n        setUserId(null)\n        localStorage.removeItem(\"token\")\n        localStorage.removeItem(\"userId\")\n    }, [])\n\n\n\n    useEffect(() => {\n        const storageToken = localStorage.getItem(\"token\")\n        const storageUserId = localStorage.getItem(\"userId\")\n        if (!token){\n            login(storageToken, storageUserId)\n        }\n    },[login,token,userId])\n\n    return {token, userId, login, logout,isAuthenticated}\n\n}"]},"metadata":{},"sourceType":"module"}