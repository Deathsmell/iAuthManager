{"version":3,"sources":["util/noop.js","context/UserContext.js","context/SelectContext.js","hooks/select.hook.js","components/UserTable/UserCell.js","components/UserTable/UserTable.js","hooks/message.hook.js","hooks/http.hook.js","context/AuthContext.js","hooks/manage.hook.js","components/UserTable/UserToolbar.js","pages/ListUsers.js","pages/AuthPage.js","components/Navbar.js","App.js","hooks/auth.hook.js","routes.js","serviceWorker.js","index.js"],"names":["module","exports","noop","UserContext","createContext","SelectContext","useSelect","useContext","users","selectedUser","setSelectedUser","setChecked","useCallback","boolean","id","elementById","document","getElementById","checked","useEffect","length","setCheckedAll","forEach","cleanSelects","selectAll","target","concat","selectRow","event","targetId","value","Number","changedUsers","filter","user","UserCell","fixDate","date","moment","format","fieldValueHandler","fieldName","style","fontSize","className","Object","entries","map","index","key","UserTable","htmlFor","type","onClick","keys","useMessage","message","window","M","toast","msg","text","html","useHttp","useState","loading","setLoading","error","setError","request","url","a","method","body","headers","JSON","stringify","fetch","response","json","data","ok","clearError","AuthContext","token","userId","login","logout","isAuthenticated","useManage","change","setChange","setUsers","getUsers","Authorization","then","catch","requestToServer","action","blockUsers","unblockedUsers","unblockUsers","blockedUsers","deleteUsers","currentUsers","isBlock","status","UserToolbar","manager","blocked","setBlocked","selectDo","handler","e","preventDefault","href","ListUsers","selector","userState","Provider","AuthPage","auth","email","password","form","setForm","changeHandler","name","registerHandler","loginHandler","onChange","disabled","color","Navbar","App","setToken","setUserId","setAuthenticate","resp","localStorage","removeItem","console","jwtToken","setItem","log","storageToken","getItem","storageUserId","useAuth","routes","path","exact","useRoutes","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"kFAAAA,EAAOC,QAAQC,KAAO,c,uPCETC,EAAcC,wBAAc,ICA5BC,EAAgBD,wBAAc,ICE9BE,EAAY,WAAO,IAAD,EACXC,qBAAWJ,GAApBK,EADoB,sBAEaD,qBAAWF,GAFxB,mBAEpBI,EAFoB,KAENC,EAFM,KAMrBC,EAAaC,uBAAY,SAACC,GAC5B,OAAO,SAACC,GACJ,IAAMC,EAAcC,SAASC,eAAeH,EAAGA,GAAKA,EAAGA,GAAK,OACxDC,IACAA,EAAYG,QAAUL,MAG/B,IAEHM,qBAAU,WACNR,EAAWH,GAAUC,EAAaW,SAAWZ,EAAMY,OAAnDT,CAA4D,SAC7D,CAACF,EAAcD,EAAOG,IAEzB,IAAMU,EAAgB,SAACR,GACnB,IAAMK,EAAUP,EAAWE,GAC3BL,EAAMc,QAAQJ,IAGZK,EAAe,WACjBb,EAAgB,IAChBW,GAAc,IAyBlB,MAAO,CAACZ,eAAce,UAtBJ,SAAC,GAAa,EAAZC,OACLP,SACPR,EAAgB,GAAGgB,OAAOlB,IAC1Ba,GAAc,IAEdE,KAiByBI,UAbf,SAACC,GACf,IAAMH,EAASG,EAAMH,OACfI,EAAmC,kBAAjBJ,EAAOK,MACzBC,OAAON,EAAOK,OACdL,EAAOK,MACb,GAAIL,GAAUA,EAAOP,QAAS,CAC1B,IAAMc,EAAexB,EAAMyB,QAAO,SAAAC,GAAI,OAAIA,EAAKpB,KAAOe,KACtDnB,EAAgBD,EAAaiB,OAAOM,IAEpCP,IAAWA,EAAOP,SAClBR,EAAgBD,EAAawB,QAAO,SAAAC,GAAI,OAAIA,EAAKpB,KAAOe,OAGpBN,iB,yBCjBjCY,EAlCE,SAAC,GAAY,IAAXD,EAAU,EAAVA,KACTE,EAAUxB,uBAAY,SAACyB,GAAD,OAAUC,IAAOD,GAAME,OAAO,uBAAsB,IAE1EC,EAAoB5B,uBAAY,SAAC6B,EAAWX,GAC9C,MAAkB,cAAdW,EACOL,EAAQN,GAED,WAAdW,EAEI,yBAAKC,MAAO,CAACC,SAAU,QAASC,UAAW,QAAQlB,OAAiB,YAAVI,EAAsB,MAAQ,UACnFA,GAIFA,IAEZ,CAACI,EAAKE,IAET,OACIS,OAAOC,QAAQZ,GAAMa,KAAI,WAAqBC,GAAW,IAAD,mBAA7BP,EAA6B,KAAlBX,EAAkB,KACpD,OACI,wBACIc,UAAWd,EACXmB,IAAG,UAAKnB,EAAL,YAAckB,EAAd,YAAuBlB,IAGtBU,EAAkBC,EAAWX,QCyCtCoB,EAjEG,WAAO,IAAD,EAEW5C,IAAxBqB,EAFa,EAEbA,UAAWH,EAFE,EAEFA,UAFE,EAGJjB,qBAAWJ,GAApBK,EAHa,oBAKpB,OACI,yBAAKoC,UAAU,IACVpC,EAAMY,QAAU,2BAAOwB,UAAU,aAC9B,+BACA,4BACI,wBAAIA,UAAU,mBACV,2BAAOO,QAAQ,OACX,2BAAOC,KAAK,WACLR,UAAU,0BACV9B,GAAG,MACHmC,IAAI,MACJI,QAAS7B,IAEhB,0BAAMoB,UAAU,YAIpBC,OAAOS,KAAK9C,EAAM,IAAIuC,KAAI,SAAAN,GACtB,OACI,wBAAIQ,IAAKR,GACJA,QAOrB,+BAEIjC,EAAMuC,KAAI,SAACb,GACP,OACI,wBACIpB,GAAE,kBAAaoB,EAAKpB,IACpBmC,IAAG,kBAAaf,EAAKpB,KAErB,wBACI8B,UAAU,mBAEV,2BAAOO,QAASjB,EAAKpB,IACjB,2BAAOsC,KAAK,WACLR,UAAU,0BACV9B,GAAIoB,EAAKpB,GACTgB,MAAOI,EAAKpB,GACZuC,QAAS1B,IAEhB,0BAAMiB,UAAU,YAGxB,kBAAC,EAAD,CAAUV,KAAMA,Y,uBCzDnCqB,EAAa,WACtB,OAAO3C,uBAAY,SAAA4C,GACXC,OAAOC,GAAKF,GAAuB,SAAZA,IACnBA,EAAQA,QACRG,EAAMH,EAAQA,SACY,kBAAZA,EACdA,EAAQlC,SAAQ,SAAAsC,GACZD,EAAMC,MAGVD,EAAMH,MAGf,KAGDG,EAAQ,SAAAE,GACVJ,OAAOC,EAAEC,MAAM,CAACG,KAAMD,KCjBbE,EAAU,WAAO,IAAD,EACKC,oBAAS,GADd,mBAClBC,EADkB,KACTC,EADS,OAECF,mBAAS,MAFV,mBAElBG,EAFkB,KAEXC,EAFW,KAuCzB,MAAO,CAACH,UAASE,QAAOE,QAnCRzD,sBAAW,uCAAC,WAAO0D,GAAP,qCAAAC,EAAA,6DAAYC,EAAZ,+BAAqB,MAAOC,EAA5B,+BAAmC,KAAMC,EAAzC,+BAAmD,GAC3ER,GAAW,GADa,SAGhBO,IACAA,EAAOE,KAAKC,UAAUH,GACtBC,EAAQ,gBAAkB,oBALV,SAQGG,MAAMP,EAAK,CAC9BE,SACAC,OACAC,YAXgB,cAQdI,EARc,0BAgBHA,EAASC,OAhBN,QAgBhBC,EAhBgB,yDAkBVb,EAAQa,EAAKxB,QAAUwB,EAAKxB,QAAU,mBAC5CY,EAASD,GAnBO,eAsBfW,EAASG,IACVb,EAASY,EAAKxB,SAAW,CAACA,QAAS,2BAEvCU,GAAW,GAzBS,kBA0Bbc,GA1Ba,wCA4BpBd,GAAW,GA5BS,sEAAD,sDA+BxB,IAI8BgB,WAFdtE,uBAAY,kBAAMwD,EAAS,QAAO,M,iBCnC5Ce,EAAc/E,wBAAc,CACrCgF,MAAO,KACPC,OAAQ,KACRC,MAAOpF,IACPqF,OAAQrF,IACRsF,iBAAiB,ICgDNC,EAnDG,WAAO,IACdpB,EAAWN,IAAXM,QACDb,EAAUD,IAFI,EAGQS,oBAAS,GAHjB,mBAGb0B,EAHa,KAGLC,EAHK,KAIbP,EAAS7E,qBAAW4E,GAApBC,MAJa,EAKC7E,qBAAWJ,GAAvByF,EALW,oBAQdC,EAAWjF,uBAAY,SAACgF,GAAD,OAAcvB,EAAQ,YAAa,MAAO,KAAM,CAACyB,cAAc,UAAD,OAAYV,KAClGW,KAAKH,GACLI,OAAM,kBAAMJ,EAAS,SAAK,CAACvB,EAAQe,IAGxCjE,qBAAU,WACFiE,GAAOQ,EAASC,EAASD,MAC9B,CAACR,EAAOM,EAAQE,EAASC,IAG5B,IAAMI,EAAe,uCAAG,WAAOC,EAAQ1F,GAAf,eAAA+D,EAAA,0DAChB/D,IAAS4E,EADO,gCAEGf,EAAQ,OAAD,OAAQ6B,GAAU,OAAQ,CAAC1F,SACjD,CAACsF,cAAc,UAAD,OAAYV,KAHd,QAEVX,EAFU,SAKZjB,EAAQiB,GAEZkB,GAAWD,GAPK,sBAShBlC,EAAQ,mBATQ,2CAAH,wDA6BrB,MAAO,CAAC2C,WAbQ,uCAAG,WAAOC,GAAP,SAAA7B,EAAA,sEACF0B,EAAgB,QAASG,GADvB,mFAAH,sDAaIC,aATF,uCAAG,WAAOC,GAAP,SAAA/B,EAAA,sEACJ0B,EAAgB,UAAWK,GADvB,mFAAH,sDASgBC,YALjB,uCAAG,WAAOC,GAAP,SAAAjC,EAAA,sEACH0B,EAAgB,SAAUO,GADvB,mFAAH,sDAK8BX,aC/C7CY,G,MAAU,SAAAvE,GAAI,OAAIA,EAAKwE,QAA2B,YAAhBxE,EAAKwE,SA0E9BC,EAxEK,WAEhB,IAAMC,EAAUnB,IAFM,EAGQzB,mBAAS,GAHjB,mBAGf6C,EAHe,KAGNC,EAHM,OAICvG,qBAAWF,GAA3BI,EAJe,oBAKfc,EAAgBjB,IAAhBiB,aACA4E,EAAyCS,EAAzCT,WAAYI,EAA6BK,EAA7BL,YAAaF,EAAgBO,EAAhBP,aAEhClF,qBAAU,WAGN,OAFIV,GAAgBA,EAAaW,QAC7B0F,EAAWrG,EAAawB,OAAOwE,GAASrF,QACrC,WACH0F,EAAW,MAEhB,CAACrG,IAGJ,IAAMsG,EAAW,SAACC,GACd,8CAAQ,WAAOC,GAAP,SAAA1C,EAAA,6DACJ0C,EAAEC,iBADE,SAEE3F,IAFF,cAGJuF,EAAW,GAHP,SAIEE,EAAQvG,GAJV,2CAAR,uDAQJ,OACI,yBAAKmC,UAAU,aACX,6BACI,yBAAKA,UAAU,sBACX,uBAAGA,UAAW,mBAAmBlB,OAAOmF,EAAU,IAAM,YACrDM,KAAK,IACL9D,QAAS0D,EAASV,IAEjB,uBAAGzD,UAAU,uBAAb,aAJJ,WAKaiE,EAAU,EAAV,YACFA,EADE,KAEP,IAEN,uBAAGjE,UAAW,6BAA6BlB,OAAOjB,EAAaW,OAAS,IAAM,YAC3E+F,KAAK,IACL9D,QAAS0D,EAASZ,IAEjB,uBAAGvD,UAAU,uBAAb,SAJJ,SAKWnC,EAAaW,SAAWyF,GAAWpG,EAAaW,OAAS,EAAzD,YACAX,EAAaW,OAASyF,EADtB,KAEL,IAEN,uBAAGjE,UAAW,2BAA2BlB,OAAOjB,EAAaW,OAAS,IAAM,YACzE+F,KAAK,IACL9D,QAAS0D,EAASR,IAEjB,uBAAG3D,UAAU,uBAAb,kBAJJ,UAKYnC,EAAaW,QAAUX,EAAaW,OAAS,EAA7C,YACDX,EAAaW,OADZ,KAEN,IAEN,uBAAGwB,UAAW,4BAA4BlB,OAAOjB,EAAaW,OAAS,IAAM,YAC1E+F,KAAK,IACL9D,QAAS0D,EAASxF,IAEjB,uBAAGqB,UAAU,uBAAb,aAJJ,SAKWnC,EAAaW,OAAb,YACAX,EAAaW,OADb,KAEL,QCjDXgG,EAjBG,WAEd,IAAMC,EAAWrD,mBAAS,IACpBsD,EAAYtD,mBAAS,IAE3B,OACI,6BACI,kBAAC7D,EAAYoH,SAAb,CAAsBzF,MAAOwF,GACzB,kBAACjH,EAAckH,SAAf,CAAwBzF,MAAOuF,GAC3B,kBAAC,EAAD,MACA,kBAAC,EAAD,U,cCVPG,G,MAAW,WACpB,IAAMC,EAAOlH,qBAAW4E,GADE,EAEoBpB,IAAvCE,EAFmB,EAEnBA,QAASE,EAFU,EAEVA,MAAOE,EAFG,EAEHA,QAASa,EAFN,EAEMA,WAFN,EAGFlB,mBAAS,CAC7B0D,MAAO,GACPC,SAAU,KALY,mBAGnBC,EAHmB,KAGbC,EAHa,KAQpBrE,EAAUD,IAChBpC,qBAAU,WACNqC,EAAQW,GACRe,MACD,CAACf,EAAOX,EAAS0B,IAEpB,IAAM4C,EAAgB,SAAAlG,GAClBiG,EAAQ,eAAID,EAAL,eAAYhG,EAAMH,OAAOsG,KAAOnG,EAAMH,OAAOK,UAGlDkG,EAAe,uCAAG,4BAAAzD,EAAA,sEACDF,EAAQ,cAAe,OAAhB,eAA4BuD,IADlC,OACd5C,EADc,OAEpBxB,EAAQwB,EAAKxB,SAFO,2CAAH,qDAMfyE,EAAY,uCAAG,4BAAA1D,EAAA,sEACEF,EAAQ,aAAc,OAAf,eAA2BuD,IADpC,QACX5C,EADW,SAGbyC,EAAKnC,MAAMN,EAAKI,MAAOJ,EAAKlE,IAHf,2CAAH,qDASlB,OACI,yBAAK8B,UAAU,wBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,8DACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,iDACf,0BAAMA,UAAU,2BACZ,wBAAIA,UAAU,aAAd,mBACI,yBAAKA,UAAU,OACX,yBAAKA,UAAU,uBACX,2BAAO9B,GAAG,QACHsC,KAAK,QACLR,UAAU,WACVmF,KAAK,QACLG,SAAUJ,IAEjB,2BAAO3E,QAAQ,SAAf,WAIR,yBAAKP,UAAU,OACX,yBAAKA,UAAU,uBACX,2BAAO9B,GAAG,WACHsC,KAAK,WACLR,UAAU,WACVmF,KAAK,WACLG,SAAUJ,IAEjB,2BAAO3E,QAAQ,YAAf,eAKhB,yBAAKP,UAAU,mBACX,yBAAKA,UAAU,WACf,4BAAQA,UAAU,kCACVS,QAAS4E,EACTE,SAAUlE,GAEd,wBAAIvB,MAAO,CAAC0F,MAAO,UAAnB,YAEJ,yBAAKxF,UAAU,WACf,4BACIA,UAAU,kCACVS,QAAS2E,EACTG,SAAUlE,GAEV,wBAAIvB,MAAO,CAAC0F,MAAO,UAAnB,YAEJ,yBAAKxF,UAAU,mBCrFlCyF,G,MAAS,WAAO,IAElB9C,EAAUhF,qBAAW4E,GAArBI,OAEP,OACQ,6BACI,yBAAK3C,UAAU,6BACX,0BAAMA,UAAU,wCAAuC,uBACnDA,UAAU,6BADyC,SAAvD,eAEA,wBAAIA,UAAU,8BACV,4BACI,uBAAGA,UAAU,aAAauE,KAAK,IAAI9D,QAASkC,GACxC,uBAAG3C,UAAU,8CAAb,sB,MCYjB0F,MAlBf,WAAgB,IAAD,ECNQ,WAAO,IAEnBjE,EAAWN,IAAXM,QAFkB,EAGCL,mBAAS,MAHV,mBAGlBoB,EAHkB,KAGXmD,EAHW,OAIGvE,mBAAS,MAJZ,mBAIlBqB,EAJkB,KAIVmD,EAJU,OAKkBxE,oBAAS,GAL3B,mBAKlBwB,EALkB,KAKDiD,EALC,KAOzBtH,qBAAU,YACDqE,GAAmBJ,GACpBf,EAAQ,WAAW,OAAO,KAAK,CAACyB,cAAc,UAAD,OAAYV,KACpDW,MAAK,SAAA2C,GACIA,EAAKlD,gBACPiD,GAAgB,GAEhBE,aAAaC,WAAW,YAG/B5C,MAAM6C,QAAQ1E,SAEzB,CAACqB,EAAgBJ,EAAMf,IAEzB,IAAMiB,EAAQ1E,uBAAY,SAACkI,EAAUhI,GACjCyH,EAASO,GACTN,EAAU1H,GACV6H,aAAaI,QAAQ,SAAUjI,GAC/B6H,aAAaI,QAAQ,QAASD,KAC/B,IAEGvD,EAAS3E,uBAAY,WACvBiI,QAAQG,IAAI,kBACZT,EAAS,MACTC,EAAU,MACVG,aAAaC,WAAW,SACxBD,aAAaC,WAAW,YACzB,IAYH,OARAzH,qBAAU,WACN,IAAM8H,EAAeN,aAAaO,QAAQ,SACpCC,EAAgBR,aAAaO,QAAQ,UACtC9D,GACDE,EAAM2D,EAAcE,KAE1B,CAAC7D,EAAMF,EAAMC,IAER,CAACD,QAAOC,SAAQC,QAAOC,SAAOC,mBDvCmB4D,GAAjDhE,EADI,EACJA,MAAOE,EADH,EACGA,MAAOD,EADV,EACUA,OAAQE,EADlB,EACkBA,OAAQC,EAD1B,EAC0BA,gBAC/B6D,EEPe,SAAA7D,GACrB,OAAIA,EAEI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO8D,KAAK,QAAQC,OAAK,GACrB,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOD,KAAK,KACR,kBAAC,EAAD,QAMZ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOA,KAAK,KACR,kBAAC,EAAD,QFTGE,CAAUhE,GAEzB,OACI,kBAACL,EAAYoC,SAAb,CAAsBzF,MAClB,CAACsD,QAAOG,SAAQD,QAAOD,SAAQG,oBAE/B,kBAAC,IAAD,KACI,yBAAK5C,UAAU,iCACV4C,GAAmB,kBAAC,EAAD,MACnB6D,MGTDI,QACW,cAA7BhG,OAAOiG,SAASC,UAEe,UAA7BlG,OAAOiG,SAASC,UAEhBlG,OAAOiG,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF/I,SAASC,eAAe,SDyHpB,kBAAmB+I,WACrBA,UAAUC,cAAcC,MACrBnE,MAAK,SAAAoE,GACJA,EAAaC,gBAEdpE,OAAM,SAAA7B,GACL0E,QAAQ1E,MAAMA,EAAMX,c","file":"static/js/main.4052bfa8.chunk.js","sourcesContent":["module.exports.noop = () => { }","import {createContext} from 'react'\n\nexport const UserContext = createContext([])","import {createContext} from 'react'\n\nexport const SelectContext = createContext({})","import {useCallback, useContext, useEffect} from 'react'\nimport {UserContext} from \"../context/UserContext\";\nimport {SelectContext} from \"../context/SelectContext\";\n\nexport const useSelect = () => {\n    const [users] = useContext(UserContext)\n    const [selectedUser, setSelectedUser] = useContext(SelectContext)\n\n\n\n    const setChecked = useCallback((boolean) => {\n        return (id) => {\n            const elementById = document.getElementById(id.id ? id.id : \"all\");\n            if (elementById) {\n                elementById.checked = boolean\n            }\n        }\n    }, [])\n\n    useEffect(() => {\n        setChecked(users && (selectedUser.length === users.length))('all')\n    }, [selectedUser, users, setChecked])\n\n    const setCheckedAll = (boolean) => {\n        const checked = setChecked(boolean);\n        users.forEach(checked)\n    }\n\n    const cleanSelects = () => {\n        setSelectedUser([])\n        setCheckedAll(false)\n    }\n\n    const selectAll = ({target}) => {\n        if (target.checked) {\n            setSelectedUser([].concat(users))\n            setCheckedAll(true)\n        } else {\n            cleanSelects()\n        }\n    }\n\n    const selectRow = (event) => {\n        const target = event.target\n        const targetId = typeof target.value === \"string\"\n            ? Number(target.value)\n            : target.value\n        if (target && target.checked) {\n            const changedUsers = users.filter(user => user.id === targetId);\n            setSelectedUser(selectedUser.concat(changedUsers))\n        }\n        if (target && !target.checked)\n            setSelectedUser(selectedUser.filter(user => user.id !== targetId))\n    }\n\n    return {selectedUser, selectAll, selectRow, cleanSelects}\n}","import React, {useCallback} from \"react\";\nimport moment from \"moment\";\n\n\nconst UserCell = ({user}) => {\n    const fixDate = useCallback((date) => moment(date).format(\"hh:mm:ss MM-DD-YY\"), [])\n\n    const fieldValueHandler = useCallback((fieldName, value) => {\n        if (fieldName === \"createdAt\") {\n            return fixDate(value)\n        }\n        if (fieldName === 'status') {\n            return (\n                <div style={{fontSize: \"20px\"}} className={\"chip \".concat(value === \"blocked\" ? \"red\" : \"green\")}>\n                    {value}\n                </div>\n            )\n        } else {\n            return value\n        }\n    }, [user,fixDate])\n\n    return (\n        Object.entries(user).map(([fieldName, value], index) => {\n            return (\n                <td\n                    className={value}\n                    key={`${value}-${index}-${value}`}\n                >\n                    {\n                        fieldValueHandler(fieldName, value)\n                    }\n                </td>\n            )\n        })\n    )\n}\n\nexport default UserCell","import React, {useContext} from \"react\";\nimport {useSelect} from \"../../hooks/select.hook\";\nimport {UserContext} from \"../../context/UserContext\";\nimport \"./UserTable.css\"\nimport UserCell from \"./UserCell\";\n\nconst UserTable = () => {\n\n    const {selectRow, selectAll} = useSelect()\n    const [users] = useContext(UserContext);\n\n    return (\n        <div className=\"\">\n            {users.length && <table className=\"highlight\">\n                <thead>\n                <tr>\n                    <th className=\"checkbox-collum\">\n                        <label htmlFor=\"all\">\n                            <input type=\"checkbox\"\n                                   className=\"filled-in checkbox-pink\"\n                                   id=\"all\"\n                                   key=\"all\"\n                                   onClick={selectAll}\n                            />\n                            <span className=\"empty\"/>\n                        </label>\n                    </th>\n                    {\n                        Object.keys(users[0]).map(fieldName => {\n                            return (\n                                <th key={fieldName}>\n                                    {fieldName}\n                                </th>\n                            )\n                        })\n                    }\n                </tr>\n                </thead>\n                <tbody>\n                {\n                    users.map((user) => {\n                        return (\n                            <tr\n                                id={`user-tr-${user.id}`}\n                                key={`user-tr-${user.id}`}\n                            >\n                                <td\n                                    className=\"checkbox-collum\"\n                                >\n                                    <label htmlFor={user.id}>\n                                        <input type=\"checkbox\"\n                                               className=\"filled-in checkbox-pink\"\n                                               id={user.id}\n                                               value={user.id}\n                                               onClick={selectRow}\n                                        />\n                                        <span className=\"empty\"/>\n                                    </label>\n                                </td>\n                                <UserCell user={user}/>\n                            </tr>\n                        )\n                    })\n                }\n                </tbody>\n            </table>\n            }\n        </div>\n    )\n}\n\nexport default UserTable","import {useCallback} from 'react'\n\nexport const useMessage = () => {\n    return useCallback(message => {\n        if (window.M && message && message !== \"null\") {\n            if (message.message) {\n                toast(message.message)\n            } else if (typeof message !== \"string\") {\n                message.forEach(msg => {\n                    toast(msg)\n                })\n            } else {\n                toast(message)\n            }\n        }\n    }, [])\n}\n\nconst toast = text => {\n    window.M.toast({html: text})\n}","import {useCallback, useState} from 'react'\n\nexport const useHttp = () => {\n    const [loading, setLoading] = useState(false)\n    const [error, setError] = useState(null)\n\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\n        setLoading(true)\n        try {\n            if (body) {\n                body = JSON.stringify(body)\n                headers['Content-Type'] = 'application/json'\n            }\n\n            const response = await fetch(url, {\n                method,\n                body,\n                headers\n            })\n\n            let data\n            try {\n                data = await response.json()\n            } catch (e) {\n                const error = data.message ? data.message : \"Unsupported json\"\n                setError(error)\n            }\n\n            if (!response.ok) {\n                setError(data.message || {message: \"useHttp response error\"})\n            }\n            setLoading(false)\n            return data\n        } catch (e) {\n            setLoading(false)\n            throw e\n        }\n    }, [])\n\n    const clearError = useCallback(() => setError(null), [])\n\n    return {loading, error, request, clearError}\n}","import {createContext} from 'react'\nimport noop from '../util/noop'\n\n\nexport const AuthContext = createContext({\n    token: null,\n    userId: null,\n    login: noop,\n    logout: noop,\n    isAuthenticated: false,\n})","import {useCallback, useContext, useEffect, useState} from \"react\";\nimport {useMessage} from \"./message.hook\";\nimport {useHttp} from \"./http.hook\";\nimport {AuthContext} from \"../context/AuthContext\";\nimport {UserContext} from \"../context/UserContext\";\n\nconst useManage = () => {\n    const {request} = useHttp()\n    const message = useMessage();\n    const [change, setChange] = useState(false);\n    const {token} = useContext(AuthContext);\n    const [, setUsers] = useContext(UserContext);\n\n\n    const getUsers = useCallback((setUsers) => request('api/users', 'GET', null, {Authorization: `Bearer ${token}`})\n        .then(setUsers)\n        .catch(() => setUsers([])),[request,token])\n\n\n    useEffect(() => {\n        if (token) setUsers(getUsers(setUsers))\n    }, [token, change, setUsers,getUsers])\n\n\n    const requestToServer = async (action, users) => {\n        if (users && token) {\n            const body = await request(`api/${action}`, 'POST', {users},\n                {Authorization: `Bearer ${token}`})\n            if (body) {\n                message(body)\n            }\n            setChange(!change)\n        } else {\n            message(`Incorrect token`)\n        }\n    }\n\n\n\n\n    const blockUsers = async (unblockedUsers) => {\n        return await requestToServer('block', unblockedUsers)\n    }\n\n    const unblockUsers = async (blockedUsers) => {\n        return await requestToServer('unblock', blockedUsers)\n    }\n\n    const deleteUsers = async (currentUsers) => {\n        return await requestToServer('delete', currentUsers)\n    }\n\n\n    return {blockUsers, unblockUsers, deleteUsers, getUsers,}\n\n}\n\nexport default useManage","import React, {useContext, useEffect, useState} from \"react\"\nimport {useSelect} from \"../../hooks/select.hook\";\nimport {SelectContext} from \"../../context/SelectContext\";\nimport useManage from \"../../hooks/manage.hook\";\nimport \"./UserToolbar.css\"\n\nconst isBlock = user => user.status && (user.status === \"blocked\")\n\nconst UserToolbar = () => {\n\n    const manager = useManage();\n    const [blocked, setBlocked] = useState(0)\n    const [selectedUser] = useContext(SelectContext)\n    const {cleanSelects} = useSelect()\n    const {blockUsers, deleteUsers, unblockUsers} = manager\n\n    useEffect(() => {\n        if (selectedUser && selectedUser.length)\n            setBlocked(selectedUser.filter(isBlock).length)\n        return () => {\n            setBlocked(0)\n        }\n    }, [selectedUser])\n\n\n    const selectDo = (handler) => {\n        return (async (e) => {\n            e.preventDefault()\n            await cleanSelects()\n            setBlocked(0)\n            await handler(selectedUser)\n        })\n    }\n\n    return (\n        <div className=\"btn-group\">\n            <div>\n                <div className=\"card-action center\">\n                    <a className={\"btn-large green \".concat(blocked ? \" \" : \"disabled\")}\n                       href=\"/\"\n                       onClick={selectDo(unblockUsers)}\n                    >\n                        <i className=\"material-icons left\">group_add</i>\n                        Unblock {blocked > 1\n                        ? ` (${blocked})`\n                        : \"\"}\n                    </a>\n                    <a className={\"btn-large yellow darken-2 \".concat(selectedUser.length ? \" \" : \"disabled\")}\n                       href=\"/\"\n                       onClick={selectDo(blockUsers)}\n                    >\n                        <i className=\"material-icons left\">block</i>\n                        Block {selectedUser.length !== blocked && selectedUser.length > 1\n                        ? ` (${selectedUser.length - blocked})`\n                        : \"\"}\n                    </a>\n                    <a className={\"btn-large red lighten-1 \".concat(selectedUser.length ? \" \" : \"disabled\")}\n                       href=\"/\"\n                       onClick={selectDo(deleteUsers)}\n                    >\n                        <i className=\"material-icons left\">delete_forever</i>\n                        Delete {selectedUser.length && selectedUser.length > 1\n                        ? ` (${selectedUser.length})`\n                        : \"\"}\n                    </a>\n                    <a className={\"btn-large grey lighten-1 \".concat(selectedUser.length ? \" \" : \"disabled\")}\n                       href=\"/\"\n                       onClick={selectDo(cleanSelects)}\n                    >\n                        <i className=\"material-icons left\">clear_all</i>\n                        Clean {selectedUser.length\n                        ? ` (${selectedUser.length})`\n                        : \"\"}\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default UserToolbar","import React, {useState} from \"react\"\nimport UserTable from \"../components/UserTable/UserTable\"\nimport UserToolbar from \"../components/UserTable/UserToolbar\"\nimport {UserContext} from \"../context/UserContext\";\nimport {SelectContext} from \"../context/SelectContext\";\n\nconst ListUsers = () => {\n\n    const selector = useState([]);\n    const userState = useState([]);\n\n    return (\n        <div>\n            <UserContext.Provider value={userState}>\n                <SelectContext.Provider value={selector}>\n                    <UserToolbar/>\n                    <UserTable/>\n                </SelectContext.Provider>\n            </UserContext.Provider>\n        </div>\n    )\n}\n\nexport default ListUsers","import React, {useContext, useEffect, useState} from \"react\";\nimport {useHttp} from \"../hooks/http.hook\";\nimport {useMessage} from \"../hooks/message.hook\";\nimport {AuthContext} from \"../context/AuthContext\";\nimport './AuthPage.css'\n\nexport const AuthPage = () => {\n    const auth = useContext(AuthContext);\n    const {loading, error, request, clearError} = useHttp();\n    const [form, setForm] = useState({\n        email: '',\n        password: '',\n    })\n\n    const message = useMessage()\n    useEffect(() => {\n        message(error)\n        clearError()\n    }, [error, message, clearError])\n\n    const changeHandler = event => {\n        setForm({...form, [event.target.name]: event.target.value})\n    }\n\n    const registerHandler = async () => {\n        const data = await request('/api/signup', 'POST', {...form})\n        message(data.message)\n    }\n\n\n    const loginHandler = async () => {\n        const data = await request('/api/login', 'POST', {...form})\n        if (data) {\n            auth.login(data.token, data.id)\n        } else {\n            // message(\"Not response\")\n        }\n    }\n\n    return (\n        <div className=\"col xl12 l12 m12 s12\">\n            <div className=\"row\">\n                <div className=\"col xl6 offset-xl3 l8 offset-l2 m8 offset-m2 s10 offset-s1\">\n                    <div className=\"row\">\n                        <div className=\"card cyan darken-4\">\n                            <div className=\"auth-panel card-content white-text hoverable \">\n                            <span className=\"card-title center-align\">\n                                <h5 className=\"auth-logo\">Authentication</h5></span>\n                                    <div className=\"row\">\n                                        <div className=\"input-field col s12\">\n                                            <input id=\"email\"\n                                                   type=\"email\"\n                                                   className=\"validate\"\n                                                   name=\"email\"\n                                                   onChange={changeHandler}\n                                            />\n                                            <label htmlFor=\"email\">Email</label>\n                                        </div>\n                                    </div>\n\n                                    <div className=\"row\">\n                                        <div className=\"input-field col s12\">\n                                            <input id=\"password\"\n                                                   type=\"password\"\n                                                   className=\"validate\"\n                                                   name=\"password\"\n                                                   onChange={changeHandler}\n                                            />\n                                            <label htmlFor=\"password\">Password</label>\n                                        </div>\n                                    </div>\n\n                            </div>\n                            <div className=\"card-action row\">\n                                <div className=\"col s1\"/>\n                                <button className=\"btn-large  cyan darken-2 col s4\"\n                                        onClick={loginHandler}\n                                        disabled={loading}\n                                >\n                                    <h6 style={{color: 'black'}}>Sign in</h6>\n                                </button>\n                                <div className=\"col s2\"/>\n                                <button\n                                    className=\"btn-large  cyan darken-2 col s4\"\n                                    onClick={registerHandler}\n                                    disabled={loading}\n                                >\n                                    <h6 style={{color: 'black'}}>Sign up</h6>\n                                </button>\n                                <div className=\"col s1\"/>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    )\n}","import React, {useContext} from \"react\"\nimport {AuthContext} from \"../context/AuthContext\";\nimport \"./Navbar.css\"\n\nexport const Navbar = () => {\n\n    const {logout} = useContext(AuthContext)\n\n    return (\n            <nav>\n                <div className=\"nav-wrapper cyan darken-4\">\n                    <span className=\"brand-logo logo white-text lighten-1\"><i\n                        className=\"material-icons icon-color\">cloud</i>Auth manger</span>\n                    <ul className=\"right hide-on-med-and-down\">\n                        <li>\n                            <a className=\"logout-btn\" href=\"/\" onClick={logout}>\n                                <i className=\"material-icons center icon-color lighten-1\">exit_to_app</i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </nav>\n    )\n}","import React from 'react'\nimport {BrowserRouter as Router} from \"react-router-dom\"\nimport {useRoutes} from \"./routes\";\nimport {useAuth} from \"./hooks/auth.hook\";\nimport {AuthContext} from \"./context/AuthContext\";\nimport {Navbar} from \"./components/Navbar\";\nimport 'materialize-css'\nimport './index.css'\n\n\nfunction App() {\n    const {token, login, userId, logout, isAuthenticated} = useAuth()\n    const routes = useRoutes(isAuthenticated)\n\n    return (\n        <AuthContext.Provider value={\n            {token, logout, login, userId, isAuthenticated}\n        }>\n            <Router>\n                <div className=\"fullscreen cyan lighten-5 row\">\n                    {isAuthenticated && <Navbar/>}\n                    {routes}\n                </div>\n            </Router>\n        </AuthContext.Provider>\n    );\n}\n\nexport default App\n","import {useState, useCallback, useEffect,} from 'react'\nimport {useHttp} from \"./http.hook\";\n\n\nexport const useAuth = () => {\n\n    const {request} = useHttp()\n    const [token, setToken] = useState(null)\n    const [userId, setUserId] = useState(null)\n    const [isAuthenticated, setAuthenticate] = useState(false)\n\n    useEffect(()=>{\n        if (!isAuthenticated && token){\n            request('api/auth','POST',null,{Authorization: `Bearer ${token}`})\n                .then(resp => {\n                    if (!!resp.isAuthenticated){\n                        setAuthenticate(true)\n                    } else {\n                        localStorage.removeItem(\"token\")\n                    }\n                })\n                .catch(console.error)\n        }\n    },[isAuthenticated,token,request])\n\n    const login = useCallback((jwtToken, id) => {\n        setToken(jwtToken)\n        setUserId(id)\n        localStorage.setItem(\"userId\", id)\n        localStorage.setItem(\"token\", jwtToken)\n    }, [])\n\n    const logout = useCallback(() => {\n        console.log(\"I remove TOKEN\")\n        setToken(null)\n        setUserId(null)\n        localStorage.removeItem(\"token\")\n        localStorage.removeItem(\"userId\")\n    }, [])\n\n\n\n    useEffect(() => {\n        const storageToken = localStorage.getItem(\"token\")\n        const storageUserId = localStorage.getItem(\"userId\")\n        if (!token){\n            login(storageToken, storageUserId)\n        }\n    },[login,token,userId])\n\n    return {token, userId, login, logout,isAuthenticated}\n\n}","import React from \"react\"\nimport {Route, Switch} from \"react-router-dom\"\nimport ListUsers from \"./pages/ListUsers\"\nimport {AuthPage} from \"./pages/AuthPage\"\n\nexport const useRoutes = isAuthenticated => {\n    if (isAuthenticated) {\n        return (\n            <Switch>\n                <Route path=\"/list\" exact>\n                    <ListUsers/>\n                </Route>\n                <Route path=\"*\">\n                    <ListUsers />\n                </Route>\n            </Switch>\n        )\n    }\n    return (\n        <Switch>\n            <Route path=\"*\">\n                <AuthPage />\n            </Route>\n        </Switch>\n    )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}